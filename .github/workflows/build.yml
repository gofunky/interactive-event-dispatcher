name: build

on:
  push:
    branches:
      - master

jobs:
  wait:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: wait for previous workflows to finish
        uses: softprops/turnstyle@v1
        with:
          same-branch-only: true
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        node-version: [12.x]
        os: [ubuntu-latest]
        pnpm-version: [5.7.0]
    name: node.js ${{ matrix.node-version }}
    steps:
      - name: checkout code
        uses: actions/checkout@v2.3.2
        with:
          persist-credentials: false
      - name: setup node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.1.1
        with:
          node-version: ${{ matrix.node-version }}
      - name: cache node modules
        uses: actions/cache@v2.1.1
        with:
          path: |
            **/node_modules
            **/.putoutcache
          key: ${{ runner.OS }}-${{ matrix.node-version }}-${{ hashFiles('/pnpm-lock.yaml') }}-${{ matrix.pnpm-version }}
          restore-keys: |
            ${{ runner.OS }}-${{ matrix.node-version }}-${{ hashFiles('/pnpm-lock.yaml') }}-${{ matrix.pnpm-version }}
            ${{ runner.OS }}-${{ matrix.node-version }}-${{ hashFiles('/pnpm-lock.yaml') }}
            ${{ runner.OS }}-${{ matrix.node-version }}
      - name: setup pnpm
        uses: pnpm/action-setup@v1.2.0
        with:
          version: ${{ matrix.pnpm-version }}
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]
      - name: determine ncc cache dir and version
        run: |
          echo "::set-env name=ncc-cache::$(pnpx ncc cache dir)"
          echo "::set-env name=ncc-version::$(pnpx ncc version)"
      - name: cache ncc
        uses: actions/cache@v2.1.1
        with:
          path: ${{ env.ncc-cache }}
          key: ${{ runner.OS }}-${{ matrix.node-version }}-${{ env.ncc-version }}-${{ hashFiles('**/*.ts') }}
          restore-keys: |
            ${{ runner.OS }}-${{ matrix.node-version }}-${{ env.ncc-version }}-${{ hashFiles('**/*.ts') }}
            ${{ runner.OS }}-${{ matrix.node-version }}-${{ env.ncc-version }}
      - name: build
        run: pnpm build
  test:
    needs: [ wait, build ]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        id: [ test_push ]
        sourceEvent: [ push ]
        appendCommand: [ false ]
        pullMode: [ false ]
        triggered: [ true ]
        number: [ '' ]
        prefixFilter: [ '' ]
        commandFilter: [ '' ]
        body: [ '' ]
        command: [ '' ]
        include:
          - id: test_push_pullMode
            sourceEvent: push
            pullMode: true
            triggered: true
          - id: test_regex
            sourceEvent: issue_comment
            number: 4
            prefixFilter: '$gofunky([-\/]bot)?'
            commandFilter: ''
            appendCommand: false
            pullMode: false
            body: |
              $gofunky my test trigger
              Something else
            triggered: true
            command: my test trigger
          - id: test_regex_nocommand
            sourceEvent: issue_comment
            number: 4
            prefixFilter: '$gofunky([-\/]bot)?'
            commandFilter: ''
            appendCommand: false
            pullMode: false
            body: |
              $gofunky/bot
              Something else
            triggered: true
            command: ''
          - id: test_regex_notrigger
            sourceEvent: issue_comment
            number: 4
            prefixFilter: '$gofunky([-\/]bot)?'
            commandFilter: ''
            appendCommand: false
            pullMode: false
            body: |
              $gofunk-bot foo
              Something else
            triggered: false
            command: ''
          - id: test_no_affiliation_notrigger
            sourceEvent: issue_comment
            number: 1
            prefixFilter: '$gofunky([-\/]bot)?'
            commandFilter: ''
            appendCommand: false
            pullMode: false
            body: |
              $gofunky my test trigger
              Something else
            triggered: false
            command: my test trigger
          - id: test_empty_prefix
            sourceEvent: issue_comment
            number: 4
            prefixFilter: ''
            commandFilter: ''
            appendCommand: false
            pullMode: false
            body: |
              Something irrelevant
            triggered: true
            command: ''
          - id: test_empty_body
            sourceEvent: issue_comment
            number: 4
            prefixFilter: ''
            commandFilter: ''
            appendCommand: false
            pullMode: false
            body: ''
            triggered: true
            command: ''
    steps:
      - name: checkout code
        uses: actions/checkout@v2.3.2
        with:
          persist-credentials: false
      - name: execute action
        id: test
        uses: ./
        with:
          token: ${{ secrets.PAT }}
          prefixFilter: ${{ matrix.prefixFilter }}
          commandFilter: ${{ matrix.commandFilter }}
          appendCommand: ${{ matrix.appendCommand }}
          pullMode: ${{ matrix.pullMode }}
          body: ${{ matrix.body }}
          number: ${{ matrix.number }}
          event: ${{ matrix.id }}
          sourceEvent: ${{ matrix.sourceEvent }}
          observingChecks: false
      - name: check command
        if: matrix.command != ''
        run: |
          if [[ "${{ steps.test.outputs.command }}" != "${{ matrix.command }}" ]]; then
            echo '::error::`outputs.command` was expected to be `${{ matrix.command }}` but was actually `${{ steps.test.outputs.command }}`'
            exit 1
          fi
      - name: check trigger
        run: |
          if [[ "${{ steps.test.outputs.triggered }}" != "${{ matrix.triggered }}" ]]; then
            echo '::error::`outputs.command` was expected to be `${{ matrix.triggered }}` but was actually `${{ steps.test.outputs.triggered }}`'
            exit 1
          fi
      - name: validate triggered workflow status
        uses: xembly/validate-workflow-status@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          workflow: test
          branch: master
