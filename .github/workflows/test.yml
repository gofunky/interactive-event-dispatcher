name: test

on:
  repository_dispatch:
    branches:
      - master

jobs:
  event:
    runs-on: ubuntu-latest
    steps:
      - name: fail if trigger contains notrigger
        if: contains(github.event.action, 'notrigger')
        run: |
          echo "::error:: event type ${{ github.event.action }} was not supposed to be triggered"
          exit 1
      - name: checkout code
        uses: actions/checkout@v2.3.2
        with:
          persist-credentials: false
      - name: execute observer
        uses: ./observer/
      - name: read matrix
        uses: ./.github/matrix/
        id: matrix
      - name: fail if trigger was not expected
        run: |
          if [[ "${{ steps.matrix.outputs.triggered }}" != "true" ]]; then
            echo "::error:: event type ${{ github.event.action }} was not supposed to be triggered"
            exit 1
          fi
      - name: fail if event is missing
        if: github.event.client_payload.sourceEvent == ''
        run: |
          echo "::error:: event is missing"
          exit 1
      - name: fail if repository is missing
        if: github.event.client_payload.repository == ''
        run: |
          echo "::error:: repository is missing"
          exit 1
      - name: fail if ref is missing
        if: github.event.client_payload.ref == ''
        run: |
          echo "::error:: ref is missing"
          exit 1
      - name: fail if sha is missing
        if: github.event.client_payload.sha == ''
        run: |
          echo "::error:: sha is missing"
          exit 1
      - name: assert pull_request number
        if: contains(github.event.client_payload.sourceEvent, 'pull_request')
          && github.event.client_payload.number != steps.matrix.outputs.number
        run: |
          echo '::error::`github.event.client_payload.number` was expected to be `${{ steps.matrix.outputs.number }}` but was actually `${{ github.event.client_payload.number }}`'
          exit 1
      - name: assert issue_comment number
        if: contains(github.event.client_payload.sourceEvent, 'issue_comment')
          && github.event.client_payload.number != steps.matrix.outputs.number
        run: |
          echo '::error::`github.event.client_payload.number` was expected to be `${{ steps.matrix.outputs.number }}` but was actually `${{ github.event.client_payload.number }}`'
          exit 1
      - name: fail if pull_request payload is missing
        if: contains(github.event.client_payload.sourceEvent, 'pull_request')
          && github.event.client_payload.pull_request.number == ''
        run: |
          echo "::error:: pull_request payload is missing"
          exit 1
      - name: fail if issue_comment payload is missing
        if: contains(github.event.client_payload.sourceEvent, 'issue_comment')
          && github.event.client_payload.comment.number == ''
        run: |
          echo "::error:: issue_comment payload is missing"
          exit 1
      - name: assert issue_comment command
        if: contains(github.event.client_payload.sourceEvent, 'issue_comment')
          && github.event.client_payload.command != steps.matrix.outputs.command
        run: |
          echo '::error::`github.event.client_payload.command` was expected to be `${{ steps.matrix.outputs.command }}` but was actually `${{ github.event.client_payload.command }}`'
          exit 1
      - name: assert issue_comment body
        if: contains(github.event.client_payload.sourceEvent, 'issue_comment')
          && github.event.client_payload.body != steps.matrix.outputs.body
        run: |
          echo '::error::`github.event.client_payload.body` was expected to be `${{ steps.matrix.outputs.body }}` but was actually `${{ github.event.client_payload.body }}`'
          exit 1
